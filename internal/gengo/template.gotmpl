// Code generated by github.com/romshark/localize/cmd/localize. DO NOT EDIT.
// generator version: {{ .GeneratorVersion }}
{{ if .CopyrightNotice }}
// {{ .CopyrightNotice }}
{{ end }}

// Package localizebundle provides generated localization readers for:
// - en
package {{ .Package }}

import (
	"github.com/romshark/localize"	
	"golang.org/x/text/language"
)

{{ range .Catalogs }}
var {{ .TypeNameUnexported }}Tag language.Tag
var {{ .TypeNameUnexported }}Base language.Base
{{ end }}

func init() {
	{{ range .Catalogs }}
	{{ .TypeNameUnexported }}Tag = language.MustParse({{ printf "%q" .Locale.String }})
	{{ .TypeNameUnexported }}Base, _ = {{ .TypeNameUnexported }}Tag.Base()
	{{ end }}
}


{{ range .Catalogs }}

// {{ .TypeName }} is a localized reader implementation for locale "{{ .Locale.String }}".
type {{ .TypeName }} struct{}

var _ localize.Reader = new({{ .TypeName }})

// Locale provides the locale this reader localizes for.
// Always returns the locale "{{ .Locale.String }}".
func (r {{ .TypeName }}) Locale() language.Tag { return {{ .TypeNameUnexported }}Tag }

// Base provides the base language this reader localizes for.
// Always returns the base language of locale "{{ .Locale.String }}".
func (r {{ .TypeName }}) Base() language.Base { return {{ .TypeNameUnexported }}Base }

// Text provides static 1-to-1 translations.
func (r {{ .TypeName }}) Text(text string) (localized string) {
	// TODO
	return ""
}

// Block provides static 1-to-1 translations for a multi-line string block.
// Common leading indentation is automatically removed.
// For more information, see github.com/romshark/localize.Reader documentation.
func (r {{ .TypeName }}) Block(text string) string {
	// TODO
	return ""
}

// Plural provides plural translations in cardinal form.
// For more information, see github.com/romshark/localize.Reader documentation.
func (r {{ .TypeName }}) Plural(
	template localize.Forms, quantity int,
) (localized string) {
	// TODO
	return ""
}

// PluralBlock behaves like Plural and formats like Block.
// For more information, see github.com/romshark/localize.Reader documentation.
func (r {{ .TypeName }}) PluralBlock(
	templates localize.Forms, quantity int,
) (localized string) {
	// TODO
	return ""
}

// Ordinal provides localized representation of numbers in ordinal form.
// For more information, see github.com/romshark/localize.Reader documentation.
func (r {{ .TypeName }}) Ordinal(n int) (localized string) {
	// TODO
	return ""
}

{{ end }}