// Package pluralform provides Plural-Form headers
// for all languages that can be used in .po files.
package pluralform

import (
	_ "embed"
	"encoding/json"
	"fmt"

	"golang.org/x/text/language"
)

// Generated by https://github.com/php-gettext/Languages
//
//go:embed languages.json
var languagesJSON []byte

type model struct {
	Cases   []string `json:"cases"`
	Plurals int      `json:"plurals"`
	Formula string   `json:"formula"`
}

var byLang map[string]model

func init() {
	if err := json.Unmarshal(languagesJSON, &byLang); err != nil {
		// Should never happen. If this happens, it means
		// github.com/php-gettext/Languages provided unexpected results.
		panic(fmt.Errorf("unmarshaling languages.json: %w", err))
	}
}

type PluralForms struct {
	Zero, One, Two, Few, Many, Other bool
	GettextFormula                   string
}

// ByTag returns a .po file compatible Plural-Forms gettext header value, e.g.
//
//	locale=language.German
//	header="nplurals=2; plural=n != 1"
func ByTag(locale language.Tag) PluralForms {
	m := byLang[locale.String()]
	forms := PluralForms{Other: true}
	for _, c := range m.Cases {
		switch c {
		case "zero":
			forms.Zero = true
		case "one":
			forms.One = true
		case "two":
			forms.Two = true
		case "few":
			forms.Few = true
		case "many":
			forms.Many = true
		}
	}
	forms.GettextFormula = fmt.Sprintf("nplurals=%d; plural=%s", m.Plurals, m.Formula)
	return forms
}
